// 4.13.0 dither_algorithm=2 alpha_dither=yes layout_rotation=0 opaque_image_format=RGB888 non_opaque_image_format=ARGB8888 section=ExtFlashSection extra_section=ExtFlashSection generate_png=no 0xbc24fb1d
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <platform/driver/lcd/LCD24bpp.hpp>

extern const unsigned char _background[]; // BITMAP_BACKGROUND_ID = 0, Size: 390x390 pixels
extern const unsigned char _blank_watch_background[]; // BITMAP_BLANK_WATCH_BACKGROUND_ID = 1, Size: 390x390 pixels
extern const unsigned char _hum_press_needle[]; // BITMAP_HUM_PRESS_NEEDLE_ID = 2, Size: 6x40 pixels
extern const unsigned char _hum_press_needle_center[]; // BITMAP_HUM_PRESS_NEEDLE_CENTER_ID = 3, Size: 22x22 pixels
extern const unsigned char _tgfx_logo_white[]; // BITMAP_TGFX_LOGO_WHITE_ID = 4, Size: 200x37 pixels
extern const unsigned char _watch_hours[]; // BITMAP_WATCH_HOURS_ID = 5, Size: 24x116 pixels
extern const unsigned char _watch_minutes[]; // BITMAP_WATCH_MINUTES_ID = 6, Size: 24x146 pixels
extern const unsigned char _watch_needle_center[]; // BITMAP_WATCH_NEEDLE_CENTER_ID = 7, Size: 36x36 pixels
extern const unsigned char _watch_seconds[]; // BITMAP_WATCH_SECONDS_ID = 8, Size: 4x202 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _background, 0, 390, 390, 58, 57, 274, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 276, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _blank_watch_background, 0, 390, 390, 0, 0, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 0, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _hum_press_needle, 0, 6, 40, 2, 1, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _hum_press_needle_center, 0, 22, 22, 9, 8, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _tgfx_logo_white, 0, 200, 37, 148, 3, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 32, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _watch_hours, 0, 24, 116, 10, 10, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 98, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _watch_minutes, 0, 24, 146, 10, 10, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 128, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _watch_needle_center, 0, 36, 36, 11, 10, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _watch_seconds, 0, 4, 202, 1, 1, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 200, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
